<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.springapp</groupId>
    <artifactId>dojoExample</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>dojoExample</name>

    <properties>
        <spring.version>3.2.5.RELEASE</spring.version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
		<tomcat.version>7.0.47</tomcat.version>
		<compiler.source>1.7</compiler.source>
    </properties>

    <dependencies>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-catalina</artifactId>
			<version>${tomcat.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
            <scope>test</scope>
        </dependency>

		<!-- JSON Serialization -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.9</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.9</version>
		</dependency>

		<!-- Apache Tiles -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-core</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>2.2.1</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>
    </dependencies>

	<!-- Choose the build script based on the operating system -->
	<profiles>
		<profile>
			<id>dojo-windows</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<properties>
				<dojo-script.prefix></dojo-script.prefix>
				<dojo-script.extension>.bat</dojo-script.extension>
			</properties>
		</profile>
		<profile>
			<id>dojo-unix</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
				<dojo-script.prefix>./</dojo-script.prefix>
				<dojo-script.extension>.sh</dojo-script.extension>
			</properties>
		</profile>
	</profiles>

    <build>
        <finalName>dojoExample</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
                <configuration>
                    <source>${compiler.source}</source>
                    <target>${compiler.source}</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
				<version>2.15</version>
                <configuration>
                    <includes>
                        <include>**/*Tests.java</include>
                    </includes>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<port>8080</port>
					<systemProperties>
						<JAVA_OPTS>-Xmx1024m -XX:MaxPermSize=512m</JAVA_OPTS>
						<!-- Comment out the next line to enable S3 connections.
						Be careful that you are *not* connecting to production
						because database synchronization with S3 structure is critical!
						The way this would look as a JVM parameter on the tomcat server's
						catalina.sh is -Dspring.profiles.default=prod or -Dspring.profiles.active=dev -->
						<spring.profiles.active>dev</spring.profiles.active>
						<spring.profiles.default>prod</spring.profiles.default>
					</systemProperties>
					<additionalClasspathDirs>
						<additionalClasspathDir>${dojo-example.properties.directory}</additionalClasspathDir>
					</additionalClasspathDirs>
					<!--
					<httpsPort>8443</httpsPort>
					<keystoreFile>${basedir}/src/test/resources/keystore.jks</keystoreFile>
					<keystorePass>changeit</keystorePass>
					-->
					<!-- For Solr running on embedded Tomcat, This does not get picked up for some reason
					so a separate Jetty instance is configured to be run instead.  Also, the Maven profile "search"
					can be invoked during the tomcat7:run to fire up the instance automatically. -->
					<!--
					<addContextWarDependencies>true</addContextWarDependencies>
					-->
				</configuration>
			</plugin>
			<!-- Begin Dojo Build Stuff -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<!-- Dojo 1.10 execution -->
					<execution>
						<id>dojo-1.10-build</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${dojo-script.prefix}build${dojo-script.extension}</executable>
							<workingDirectory>${basedir}/src/main/webapp/resources/dojo-release-1.10.2-src/util/buildscripts</workingDirectory>
							<arguments>
								<argument>--profile</argument>
								<argument>profiles/dojo-example.profile.js</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>
</project>